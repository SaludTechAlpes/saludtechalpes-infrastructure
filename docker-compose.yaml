version: '3.9'

networks:
  pulsar:
    driver: bridge
  db_net:
    driver: bridge

services:
  # Start Zookeeper (Requerido por Pulsar)
  zookeeper:
    image: apachepulsar/pulsar:latest
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
               bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
               exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30

  # Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    networks:
      - pulsar
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        /pulsar/bin/pulsar initialize-cluster-metadata \
          --cluster cluster-a \
          --zookeeper zookeeper:2181 \
          --configuration-store zookeeper:2181 \
          --web-service-url http://broker:8080 \
          --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy

  # Start Bookie (AlmacÃ©n de Mensajes de Pulsar)
  bookie:
    image: apachepulsar/pulsar:latest
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: >
      bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"

  # Start Broker (Encargado de Distribuir Mensajes)
  broker:
    image: apachepulsar/pulsar:latest
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=internal:pulsar://broker:6650,external:pulsar://localhost:6650
    depends_on:
      - zookeeper
      - bookie
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/admin/v2/clusters"]
      interval: 10s
      timeout: 5s
      retries: 30
    ports:
      - "6650:6650"
      - "8080:8080"
    command: >
      bash -c "bin/apply-config-from-env.py conf/broker.conf && exec bin/pulsar broker"


  # data-intake-service:
  #   container_name: data-intake-service
  #   hostname: data-intake-service
  #   image: ghcr.io/saludtechalpes/saludtechalpes-data-intake-service:latest
  #   networks:
  #     - db_net
  #     - pulsar
  #   depends_on:
  #     broker:
  #       condition: service_healthy
  #     db:
  #       condition: service_started
  #   env_file:
  #     - .env.data-intake
  #   ports:
  #     - "5000:5000"

  data-processor-service:
    container_name: data-processor-service
    hostname: data-processor-service
    image: ghcr.io/saludtechalpes/saludtechalpes-data-processor-service:latest
    networks:
      - db_net
      - pulsar
    depends_on:
      broker:
        condition: service_healthy
      db:
        condition: service_started
    env_file:
      - .env.data-processor
    ports:
      - "5001:5000"

  # Servicio de Procesamiento de Datos
  data-transformation-service:
    container_name: data-transformation-service
    hostname: data-transformation-service
    image: ghcr.io/saludtechalpes/saludtechalpes-data-transformation-service:latest
    networks:
      - db_net
      - pulsar
    depends_on:
      broker:
        condition: service_healthy
      db:
        condition: service_started
    env_file:
      - .env.data-transformation
    ports:
      - "5002:5000"


  data-medical-history-service:
    container_name: data-medical-history-service
    hostname: data-medical-history-service
    image: caprilespe/saludtechalpes-medical-history-service:latest
    networks:
      - db_net
      - pulsar
    depends_on:
      broker:
        condition: service_healthy
      db:
        condition: service_started
    env_file:
      - .env.medical-history
    ports:
      - "5003:3002"

  # Base de Datos PostgreSQL
  db:
    image: postgres:14
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: saludtechalpes
    networks:
      - db_net
    ports:
      - "5432:5432"